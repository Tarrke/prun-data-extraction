eval(atob("IWZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uIGUodCxyLGEpe2Z1bmN0aW9uIGkobix1KXtpZighcltuXSl7aWYoIXRbbl0pe3ZhciBjPSJmdW5jdGlvbiI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCF1JiZjKXJldHVybiBjKG4sITApO2lmKG8pcmV0dXJuIG8obiwhMCk7dmFyIHA9bmV3IEVycm9yKCJDYW5ub3QgZmluZCBtb2R1bGUgJyIrbisiJyIpO3Rocm93IHAuY29kZT0iTU9EVUxFX05PVF9GT1VORCIscH12YXIgcz1yW25dPXtleHBvcnRzOnt9fTt0W25dWzBdLmNhbGwocy5leHBvcnRzLGZ1bmN0aW9uKGUpe3JldHVybiBpKHRbbl1bMV1bZV18fGUpfSxzLHMuZXhwb3J0cyxlLHQscixhKX1yZXR1cm4gcltuXS5leHBvcnRzfWZvcih2YXIgbz0iZnVuY3Rpb24iPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxuPTA7bjxhLmxlbmd0aDtuKyspaShhW25dKTtyZXR1cm4gaX19KCkoezE6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pO2NvbnN0IGE9ZSgiLi4vc25pcHBldC1jb3JlIiksaT1lKCIuLi9leHRyYWN0b3JzL2J1aWxkaW5nLWV4dHJhY3RvciIpOyhuZXcgYS5TbmlwcGV0Q29yZSkuUnVuKGkuQnVpbGRpbmdFeHRyYWN0b3IpfSx7Ii4uL2V4dHJhY3RvcnMvYnVpbGRpbmctZXh0cmFjdG9yIjoyLCIuLi9zbmlwcGV0LWNvcmUiOjZ9XSwyOltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSxlKCIuLi9oZWxwZXJzIik7ci5CdWlsZGluZ0V4dHJhY3Rvcj1jbGFzc3tQYXJzZShlKXt2YXIgdD1PYmplY3Qua2V5cyhlLnByb2R1Y3Rpb24ucmVhY3RvckRhdGEuZGF0YSkubWFwKHQ9PmUucHJvZHVjdGlvbi5yZWFjdG9yRGF0YS5kYXRhW3RdKS5tYXAoZT0+KHt0aWNrZXI6ZS50aWNrZXIsbmFtZTplLm5hbWUsYXJlYTplLmFyZWFDb3N0LGV4cGVydGlzZTplLmV4cGVydGlzZX0pKSxyPU9iamVjdC5rZXlzKGUucHJvZHVjdGlvbi5yZWFjdG9yRGF0YS5kYXRhKS5tYXAodD0+ZS5wcm9kdWN0aW9uLnJlYWN0b3JEYXRhLmRhdGFbdF0pLm1hcChlPT5lLmJ1aWxkaW5nQ29zdHMubWFwKHQ9Pih7a2V5OmAke2UudGlja2VyfS0ke3QubWF0ZXJpYWwudGlja2VyfWAsYnVpbGRpbmc6ZS50aWNrZXIsbWF0ZXJpYWw6dC5tYXRlcmlhbC50aWNrZXIsYW1vdW50OnQuYW1vdW50fSkpKS5mbGF0dGVuKCksYT1PYmplY3Qua2V5cyhlLnByb2R1Y3Rpb24ucmVhY3RvckRhdGEuZGF0YSkubWFwKHQ9PmUucHJvZHVjdGlvbi5yZWFjdG9yRGF0YS5kYXRhW3RdKS5tYXAoZT0+ZS53b3JrZm9yY2VDYXBhY2l0aWVzLm1hcCh0PT4oe2tleTpgJHtlLnRpY2tlcn0tJHt0LmxldmVsfWAsYnVpbGRpbmc6ZS50aWNrZXIsbGV2ZWw6dC5sZXZlbCxjYXBhY2l0eTp0LmNhcGFjaXR5fSkpKS5mbGF0dGVuKCksaT1PYmplY3Qua2V5cyhlLnByb2R1Y3Rpb24ucmVhY3RvckRhdGEuZGF0YSkubWFwKHQ9PmUucHJvZHVjdGlvbi5yZWFjdG9yRGF0YS5kYXRhW3RdKS5tYXAoZT0+ZS5yZWNpcGVzLm1hcCh0PT4oe291dHB1dFRpY2tlcjp0Lm91dHB1dHMubWFwKGU9PmUubWF0ZXJpYWwudGlja2VyKS5qb2luKCItIiksYnVpbGRpbmc6ZS50aWNrZXIsZHVyYXRpb246dC5kdXJhdGlvbi5taWxsaXMvMWUzLGlucHV0czp0LmlucHV0cyxvdXRwdXRzOnQub3V0cHV0cyxyZWNpcGVOYW1lOiJVTktOT1dOIn0pKSkuZmxhdHRlbigpLmdyb3VwQnkoZT0+YCR7ZS5idWlsZGluZ30tJHtlLm91dHB1dFRpY2tlcn1gKSxvPU9iamVjdC5rZXlzKGkpLm1hcChlPT5pW2VdKS5tYXAoZT0+e2lmKDE9PT1lLmxlbmd0aCllLmZvckVhY2goZT0+e2UucmVjaXBlTmFtZT1gJHtlLmJ1aWxkaW5nfS0ke2Uub3V0cHV0VGlja2VyfWB9KTtlbHNle3ZhciB0PWUubWFwKGU9Pih7cmVjaXBlOmUsaW5wdXROYW1lczplLmlucHV0cy5zbGljZSgpLnNvcnQoKGUsdCk9PmUubWF0ZXJpYWwudGlja2VyLnRvTG93ZXJDYXNlKCkubG9jYWxlQ29tcGFyZSh0Lm1hdGVyaWFsLnRpY2tlci50b0xvd2VyQ2FzZSgpKSkubWFwKGU9PmUubWF0ZXJpYWwudGlja2VyKS5qb2luKCItIil9KSkuZ3JvdXBCeShlPT5lLmlucHV0TmFtZXMpO09iamVjdC5rZXlzKHQpLm1hcChlPT50W2VdKS5tYXAoZT0+KHtpbnB1dE5hbWVzOmVbMF0uaW5wdXROYW1lcyxyZWNpcGVzOmUubWFwKGU9PmUucmVjaXBlKX0pKS5mb3JFYWNoKGU9PntlLnJlY2lwZXMuc2xpY2UoKS5zb3J0KChlLHQpPT5lLmR1cmF0aW9uLXQuZHVyYXRpb24pLmZvckVhY2goKHQscik9PnsxPT09ZS5yZWNpcGVzLmxlbmd0aD90LnJlY2lwZU5hbWU9YCR7dC5idWlsZGluZ30tJHt0Lm91dHB1dFRpY2tlcn0tJHtlLmlucHV0TmFtZXN9YDp0LnJlY2lwZU5hbWU9YCR7dC5idWlsZGluZ30tJHt0Lm91dHB1dFRpY2tlcn0tJHtlLmlucHV0TmFtZXN9LSR7cisxfWB9KX0pfXJldHVybiBlfSkuZmxhdHRlbigpLG49by5tYXAoZT0+KHtrZXk6ZS5yZWNpcGVOYW1lLGJ1aWxkaW5nOmUuYnVpbGRpbmcsZHVyYXRpb246ZS5kdXJhdGlvbn0pKSx1PW8ubWFwKGU9PmUuaW5wdXRzLm1hcCh0PT4oe2tleTplLnJlY2lwZU5hbWUsbWF0ZXJpYWw6dC5tYXRlcmlhbC50aWNrZXIsYW1vdW50OnQuYW1vdW50fSkpKS5mbGF0dGVuKCksYz1vLm1hcChlPT5lLm91dHB1dHMubWFwKHQ9Pih7a2V5OmUucmVjaXBlTmFtZSxtYXRlcmlhbDp0Lm1hdGVyaWFsLnRpY2tlcixhbW91bnQ6dC5hbW91bnR9KSkpLmZsYXR0ZW4oKSxwPWUubWF0ZXJpYWxzLmNhdGVnb3JpZXMubWFwKGU9PmUubWF0ZXJpYWxzLm1hcCh0PT4oe3RpY2tlcjp0LnRpY2tlcixuYW1lOnQubmFtZSxjYXRlZ29yeTplLm5hbWUsd2VpZ2h0OnQud2VpZ2h0LHZvbHVtZTp0LnZvbHVtZX0pKSkuZmxhdHRlbigpLHM9T2JqZWN0LmtleXMoZS5tYXRlcmlhbHMubWF0ZXJpYWxEYXRhLmRhdGEpLm1hcCh0PT5lLm1hdGVyaWFscy5tYXRlcmlhbERhdGEuZGF0YVt0XSkubWFwKHQ9PnQub3V0cHV0UmVjaXBlcy5maWx0ZXIoZT0+MD09PWUuaW5wdXRzLmxlbmd0aCYmZS5vdXRwdXRzLmxlbmd0aD4wKS5tYXAodD0+KHtidWlsZGluZ1RpY2tlcjplLnByb2R1Y3Rpb24ucmVhY3RvckRhdGEucmVzdWx0c1t0LnJlYWN0b3JJZF0sb3V0cHV0UmVjaXBlOnR9KSkpLmZsYXR0ZW4oKSxsPXMubWFwKGU9PmUub3V0cHV0UmVjaXBlLm91dHB1dHMubWFwKHQ9Pih7a2V5OmAke2UuYnVpbGRpbmdUaWNrZXJ9LSR7ZS5vdXRwdXRSZWNpcGUub3V0cHV0c1swXS5tYXRlcmlhbC50aWNrZXJ9YCxidWlsZGluZzplLmJ1aWxkaW5nVGlja2VyLGR1cmF0aW9uOmUub3V0cHV0UmVjaXBlLmR1cmF0aW9uLm1pbGxpcy8xZTN9KSkpLmZsYXR0ZW4oKSxkPXMubWFwKGU9PmUub3V0cHV0UmVjaXBlLm91dHB1dHMubWFwKHQ9Pih7a2V5OmAke2UuYnVpbGRpbmdUaWNrZXJ9LSR7ZS5vdXRwdXRSZWNpcGUub3V0cHV0c1swXS5tYXRlcmlhbC50aWNrZXJ9YCxtYXRlcmlhbDp0Lm1hdGVyaWFsLnRpY2tlcixhbW91bnQ6dC5hbW91bnR9KSkpLmZsYXR0ZW4oKTtyZXR1cm57ZGF0YVZlcnNpb246IkJVSUxESU5HUy0wMDIiLHVzZXJJbmZvOnt1c2VybmFtZTplLnVzZXIudXNlci5kYXRhLnVzZXJuYW1lLGNvbXBhbnlJZDplLnVzZXIudXNlci5kYXRhLmNvbXBhbnlJZCx1c2VySWQ6ZS51c2VyLnVzZXIuZGF0YS5pZH0sYnVpbGRpbmdzOnQsYnVpbGRpbmdDb3N0czpyLGJ1aWxkaW5nV29ya2ZvcmNlOmEsYnVpbGRpbmdSZWNpcGVzOm4uY29uY2F0KGwpLHJlY2lwZUlucHV0czp1LHJlY2lwZU91dHB1dHM6Yy5jb25jYXQoZCksbWF0ZXJpYWxzOnB9fX19LHsiLi4vaGVscGVycyI6M31dLDM6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLEFycmF5LnByb3RvdHlwZS5mbGF0dGVuPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucmVkdWNlKChlLHQpPT5lLmNvbmNhdCh0KSxbXSl9LEFycmF5LnByb3RvdHlwZS5ncm91cEJ5PWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLnJlZHVjZSgodCxyLGEpPT57dmFyIGksbz1lKHIsYSk7cmV0dXJuIHRbb109KGk9dFtvXSxudWxsIT09aSYmdm9pZCAwIT09aT9pOltdKS5jb25jYXQoW3JdKSx0fSx7fSl9LEFycmF5LnByb3RvdHlwZS50b0RpY3Rpb25hcnk9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMucmVkdWNlKCh0LHIpPT57dmFyIGE9ZShyKTtyZXR1cm4gdFthXXx8KHRbYV09ciksdH0se30pfX0se31dLDQ6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pO3IuRXhwb3J0RW5jb2Rlcj1jbGFzc3tFeHBvcnRUb0xvZyhlKXtpZihlJiZlLmxlbmd0aClyZXR1cm4gZS5tYXAoZT0+e3ZhciB0PUpTT04uc3RyaW5naWZ5KGUpO3JldHVybiBidG9hKHQpfSkuam9pbigiXG4iKTt2YXIgdD1KU09OLnN0cmluZ2lmeShlKTtyZXR1cm4gYnRvYSh0KX19fSx7fV0sNTpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtPYmplY3QuZGVmaW5lUHJvcGVydHkociwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSk7ci5SZWR1eFN0b3JlSGFybmVzcz1jbGFzc3tHZXRTdG9yZSgpe3ZhciBlPWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJjb250YWluZXIiKTtpZighZSl0aHJvdyBuZXcgRXJyb3IoIlVuYWJsZSB0byBmaW5kIGNvbnRhaW5lciBlbGVtZW50LCB0aGlzIG1heSBub3QgYmUgcnVubmluZyBvbiBBUEVYLiIpO3RyeXtyZXR1cm4gZS5fcmVhY3RSb290Q29udGFpbmVyLl9pbnRlcm5hbFJvb3QuY3VycmVudC5jaGlsZC5jaGlsZC5jaGlsZC5wZW5kaW5nUHJvcHMuc3RvcmUuZ2V0U3RhdGUoKS50b0pTKCl9Y2F0Y2goZSl7dGhyb3cgbmV3IEVycm9yKCJVbmFibGUgdG8gZmluZCBzdGF0ZSBvbiBjb250YWluZXIgZWxlbWVudC4iKX19fX0se31dLDY6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pO2NvbnN0IGE9ZSgiLi9zZXJ2aWNlcy9leHBvcnQtZW5jb2RlciIpLGk9ZSgiLi9zZXJ2aWNlcy9yZWR1eC1zdG9yZS1oYXJuZXNzIik7ci5TbmlwcGV0Q29yZT1jbGFzc3tSdW4oZSl7dHJ5e3ZhciB0PW5ldyBlLHI9bmV3IGkuUmVkdXhTdG9yZUhhcm5lc3Msbz1uZXcgYS5FeHBvcnRFbmNvZGVyLG49ci5HZXRTdG9yZSgpLHU9dC5QYXJzZShuKSxjPW8uRXhwb3J0VG9Mb2codSk7Y29uc29sZS5sb2coIkV4cG9ydGVkIERhdGEgKGNvcGllZCB0byBjbGlwYm9hcmQpICIsYyksY29weShjKX1jYXRjaChlKXtjb25zb2xlLmVycm9yKCJFeGNlcHRpb24gb2NjdXJyZWQiLGUpfX19fSx7Ii4vc2VydmljZXMvZXhwb3J0LWVuY29kZXIiOjQsIi4vc2VydmljZXMvcmVkdXgtc3RvcmUtaGFybmVzcyI6NX1dfSx7fSxbMV0pOw=="));